/*
SWAIN API

A powerful dynamic CRUD API engine that automatically generates RESTful endpoints for your data models SWAIN provides automatic CRUD operations, filtering, pagination, and sorting capabilities for any data model. Features: - Automatic REST API generation - Dynamic model support - Complex filtering and querying - Pagination and sorting - Swagger/OpenAPI documentation - Multiple database support (SQL & NoSQL)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ApiSuccessResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiSuccessResponse{}

// ApiSuccessResponse struct for ApiSuccessResponse
type ApiSuccessResponse struct {
	Id map[string]interface{} `json:"id,omitempty"`
	Message *string `json:"message,omitempty"`
	Success *bool `json:"success,omitempty"`
}

// NewApiSuccessResponse instantiates a new ApiSuccessResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiSuccessResponse() *ApiSuccessResponse {
	this := ApiSuccessResponse{}
	return &this
}

// NewApiSuccessResponseWithDefaults instantiates a new ApiSuccessResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiSuccessResponseWithDefaults() *ApiSuccessResponse {
	this := ApiSuccessResponse{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ApiSuccessResponse) GetId() map[string]interface{} {
	if o == nil || IsNil(o.Id) {
		var ret map[string]interface{}
		return ret
	}
	return o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiSuccessResponse) GetIdOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Id) {
		return map[string]interface{}{}, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ApiSuccessResponse) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given map[string]interface{} and assigns it to the Id field.
func (o *ApiSuccessResponse) SetId(v map[string]interface{}) {
	o.Id = v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *ApiSuccessResponse) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiSuccessResponse) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *ApiSuccessResponse) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *ApiSuccessResponse) SetMessage(v string) {
	o.Message = &v
}

// GetSuccess returns the Success field value if set, zero value otherwise.
func (o *ApiSuccessResponse) GetSuccess() bool {
	if o == nil || IsNil(o.Success) {
		var ret bool
		return ret
	}
	return *o.Success
}

// GetSuccessOk returns a tuple with the Success field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiSuccessResponse) GetSuccessOk() (*bool, bool) {
	if o == nil || IsNil(o.Success) {
		return nil, false
	}
	return o.Success, true
}

// HasSuccess returns a boolean if a field has been set.
func (o *ApiSuccessResponse) HasSuccess() bool {
	if o != nil && !IsNil(o.Success) {
		return true
	}

	return false
}

// SetSuccess gets a reference to the given bool and assigns it to the Success field.
func (o *ApiSuccessResponse) SetSuccess(v bool) {
	o.Success = &v
}

func (o ApiSuccessResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiSuccessResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if !IsNil(o.Success) {
		toSerialize["success"] = o.Success
	}
	return toSerialize, nil
}

type NullableApiSuccessResponse struct {
	value *ApiSuccessResponse
	isSet bool
}

func (v NullableApiSuccessResponse) Get() *ApiSuccessResponse {
	return v.value
}

func (v *NullableApiSuccessResponse) Set(val *ApiSuccessResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableApiSuccessResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableApiSuccessResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiSuccessResponse(val *ApiSuccessResponse) *NullableApiSuccessResponse {
	return &NullableApiSuccessResponse{value: val, isSet: true}
}

func (v NullableApiSuccessResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiSuccessResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


