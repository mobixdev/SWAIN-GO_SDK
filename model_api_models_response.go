/*
SWAIN API

A powerful dynamic CRUD API engine that automatically generates RESTful endpoints for your data models SWAIN provides automatic CRUD operations, filtering, pagination, and sorting capabilities for any data model. Features: - Automatic REST API generation - Dynamic model support - Complex filtering and querying - Pagination and sorting - Swagger/OpenAPI documentation - Multiple database support (SQL & NoSQL)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ApiModelsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiModelsResponse{}

// ApiModelsResponse Response containing a map of all registered models and their table names
type ApiModelsResponse struct {
	// Models is a map of model names to their corresponding table names example: {\"User\": \"users\", \"Post\": \"posts\"}
	Models *map[string]string `json:"models,omitempty"`
}

// NewApiModelsResponse instantiates a new ApiModelsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiModelsResponse() *ApiModelsResponse {
	this := ApiModelsResponse{}
	return &this
}

// NewApiModelsResponseWithDefaults instantiates a new ApiModelsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiModelsResponseWithDefaults() *ApiModelsResponse {
	this := ApiModelsResponse{}
	return &this
}

// GetModels returns the Models field value if set, zero value otherwise.
func (o *ApiModelsResponse) GetModels() map[string]string {
	if o == nil || IsNil(o.Models) {
		var ret map[string]string
		return ret
	}
	return *o.Models
}

// GetModelsOk returns a tuple with the Models field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiModelsResponse) GetModelsOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Models) {
		return nil, false
	}
	return o.Models, true
}

// HasModels returns a boolean if a field has been set.
func (o *ApiModelsResponse) HasModels() bool {
	if o != nil && !IsNil(o.Models) {
		return true
	}

	return false
}

// SetModels gets a reference to the given map[string]string and assigns it to the Models field.
func (o *ApiModelsResponse) SetModels(v map[string]string) {
	o.Models = &v
}

func (o ApiModelsResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiModelsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Models) {
		toSerialize["models"] = o.Models
	}
	return toSerialize, nil
}

type NullableApiModelsResponse struct {
	value *ApiModelsResponse
	isSet bool
}

func (v NullableApiModelsResponse) Get() *ApiModelsResponse {
	return v.value
}

func (v *NullableApiModelsResponse) Set(val *ApiModelsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableApiModelsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableApiModelsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiModelsResponse(val *ApiModelsResponse) *NullableApiModelsResponse {
	return &NullableApiModelsResponse{value: val, isSet: true}
}

func (v NullableApiModelsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiModelsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


