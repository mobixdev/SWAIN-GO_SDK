/*
SWAIN API

A powerful dynamic CRUD API engine that automatically generates RESTful endpoints for your data models SWAIN provides automatic CRUD operations, filtering, pagination, and sorting capabilities for any data model. Features: - Automatic REST API generation - Dynamic model support - Complex filtering and querying - Pagination and sorting - Swagger/OpenAPI documentation - Multiple database support (SQL & NoSQL)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GithubComTakifouhalCrudsqlPkgInternalAuthModelsPermission type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GithubComTakifouhalCrudsqlPkgInternalAuthModelsPermission{}

// GithubComTakifouhalCrudsqlPkgInternalAuthModelsPermission struct for GithubComTakifouhalCrudsqlPkgInternalAuthModelsPermission
type GithubComTakifouhalCrudsqlPkgInternalAuthModelsPermission struct {
	// Comma-separated actions: \"read,create,update,delete\", \"*\"
	AllowedActions *string `json:"allowed_actions,omitempty"`
	CreatedAt *string `json:"created_at,omitempty"`
	Description *string `json:"description,omitempty"`
	// e.g., \"users\", \"orders\", \"*\"
	EntityName *string `json:"entity_name,omitempty"`
	Id *int32 `json:"id,omitempty"`
	Roles []GithubComTakifouhalCrudsqlPkgInternalAuthModelsRole `json:"roles,omitempty"`
	ScopeExpression []int32 `json:"scope_expression,omitempty"`
	UpdatedAt *string `json:"updated_at,omitempty"`
}

// NewGithubComTakifouhalCrudsqlPkgInternalAuthModelsPermission instantiates a new GithubComTakifouhalCrudsqlPkgInternalAuthModelsPermission object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGithubComTakifouhalCrudsqlPkgInternalAuthModelsPermission() *GithubComTakifouhalCrudsqlPkgInternalAuthModelsPermission {
	this := GithubComTakifouhalCrudsqlPkgInternalAuthModelsPermission{}
	return &this
}

// NewGithubComTakifouhalCrudsqlPkgInternalAuthModelsPermissionWithDefaults instantiates a new GithubComTakifouhalCrudsqlPkgInternalAuthModelsPermission object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGithubComTakifouhalCrudsqlPkgInternalAuthModelsPermissionWithDefaults() *GithubComTakifouhalCrudsqlPkgInternalAuthModelsPermission {
	this := GithubComTakifouhalCrudsqlPkgInternalAuthModelsPermission{}
	return &this
}

// GetAllowedActions returns the AllowedActions field value if set, zero value otherwise.
func (o *GithubComTakifouhalCrudsqlPkgInternalAuthModelsPermission) GetAllowedActions() string {
	if o == nil || IsNil(o.AllowedActions) {
		var ret string
		return ret
	}
	return *o.AllowedActions
}

// GetAllowedActionsOk returns a tuple with the AllowedActions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComTakifouhalCrudsqlPkgInternalAuthModelsPermission) GetAllowedActionsOk() (*string, bool) {
	if o == nil || IsNil(o.AllowedActions) {
		return nil, false
	}
	return o.AllowedActions, true
}

// HasAllowedActions returns a boolean if a field has been set.
func (o *GithubComTakifouhalCrudsqlPkgInternalAuthModelsPermission) HasAllowedActions() bool {
	if o != nil && !IsNil(o.AllowedActions) {
		return true
	}

	return false
}

// SetAllowedActions gets a reference to the given string and assigns it to the AllowedActions field.
func (o *GithubComTakifouhalCrudsqlPkgInternalAuthModelsPermission) SetAllowedActions(v string) {
	o.AllowedActions = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *GithubComTakifouhalCrudsqlPkgInternalAuthModelsPermission) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComTakifouhalCrudsqlPkgInternalAuthModelsPermission) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *GithubComTakifouhalCrudsqlPkgInternalAuthModelsPermission) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *GithubComTakifouhalCrudsqlPkgInternalAuthModelsPermission) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *GithubComTakifouhalCrudsqlPkgInternalAuthModelsPermission) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComTakifouhalCrudsqlPkgInternalAuthModelsPermission) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *GithubComTakifouhalCrudsqlPkgInternalAuthModelsPermission) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *GithubComTakifouhalCrudsqlPkgInternalAuthModelsPermission) SetDescription(v string) {
	o.Description = &v
}

// GetEntityName returns the EntityName field value if set, zero value otherwise.
func (o *GithubComTakifouhalCrudsqlPkgInternalAuthModelsPermission) GetEntityName() string {
	if o == nil || IsNil(o.EntityName) {
		var ret string
		return ret
	}
	return *o.EntityName
}

// GetEntityNameOk returns a tuple with the EntityName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComTakifouhalCrudsqlPkgInternalAuthModelsPermission) GetEntityNameOk() (*string, bool) {
	if o == nil || IsNil(o.EntityName) {
		return nil, false
	}
	return o.EntityName, true
}

// HasEntityName returns a boolean if a field has been set.
func (o *GithubComTakifouhalCrudsqlPkgInternalAuthModelsPermission) HasEntityName() bool {
	if o != nil && !IsNil(o.EntityName) {
		return true
	}

	return false
}

// SetEntityName gets a reference to the given string and assigns it to the EntityName field.
func (o *GithubComTakifouhalCrudsqlPkgInternalAuthModelsPermission) SetEntityName(v string) {
	o.EntityName = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GithubComTakifouhalCrudsqlPkgInternalAuthModelsPermission) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComTakifouhalCrudsqlPkgInternalAuthModelsPermission) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GithubComTakifouhalCrudsqlPkgInternalAuthModelsPermission) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *GithubComTakifouhalCrudsqlPkgInternalAuthModelsPermission) SetId(v int32) {
	o.Id = &v
}

// GetRoles returns the Roles field value if set, zero value otherwise.
func (o *GithubComTakifouhalCrudsqlPkgInternalAuthModelsPermission) GetRoles() []GithubComTakifouhalCrudsqlPkgInternalAuthModelsRole {
	if o == nil || IsNil(o.Roles) {
		var ret []GithubComTakifouhalCrudsqlPkgInternalAuthModelsRole
		return ret
	}
	return o.Roles
}

// GetRolesOk returns a tuple with the Roles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComTakifouhalCrudsqlPkgInternalAuthModelsPermission) GetRolesOk() ([]GithubComTakifouhalCrudsqlPkgInternalAuthModelsRole, bool) {
	if o == nil || IsNil(o.Roles) {
		return nil, false
	}
	return o.Roles, true
}

// HasRoles returns a boolean if a field has been set.
func (o *GithubComTakifouhalCrudsqlPkgInternalAuthModelsPermission) HasRoles() bool {
	if o != nil && !IsNil(o.Roles) {
		return true
	}

	return false
}

// SetRoles gets a reference to the given []GithubComTakifouhalCrudsqlPkgInternalAuthModelsRole and assigns it to the Roles field.
func (o *GithubComTakifouhalCrudsqlPkgInternalAuthModelsPermission) SetRoles(v []GithubComTakifouhalCrudsqlPkgInternalAuthModelsRole) {
	o.Roles = v
}

// GetScopeExpression returns the ScopeExpression field value if set, zero value otherwise.
func (o *GithubComTakifouhalCrudsqlPkgInternalAuthModelsPermission) GetScopeExpression() []int32 {
	if o == nil || IsNil(o.ScopeExpression) {
		var ret []int32
		return ret
	}
	return o.ScopeExpression
}

// GetScopeExpressionOk returns a tuple with the ScopeExpression field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComTakifouhalCrudsqlPkgInternalAuthModelsPermission) GetScopeExpressionOk() ([]int32, bool) {
	if o == nil || IsNil(o.ScopeExpression) {
		return nil, false
	}
	return o.ScopeExpression, true
}

// HasScopeExpression returns a boolean if a field has been set.
func (o *GithubComTakifouhalCrudsqlPkgInternalAuthModelsPermission) HasScopeExpression() bool {
	if o != nil && !IsNil(o.ScopeExpression) {
		return true
	}

	return false
}

// SetScopeExpression gets a reference to the given []int32 and assigns it to the ScopeExpression field.
func (o *GithubComTakifouhalCrudsqlPkgInternalAuthModelsPermission) SetScopeExpression(v []int32) {
	o.ScopeExpression = v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *GithubComTakifouhalCrudsqlPkgInternalAuthModelsPermission) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComTakifouhalCrudsqlPkgInternalAuthModelsPermission) GetUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *GithubComTakifouhalCrudsqlPkgInternalAuthModelsPermission) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *GithubComTakifouhalCrudsqlPkgInternalAuthModelsPermission) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

func (o GithubComTakifouhalCrudsqlPkgInternalAuthModelsPermission) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GithubComTakifouhalCrudsqlPkgInternalAuthModelsPermission) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AllowedActions) {
		toSerialize["allowed_actions"] = o.AllowedActions
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.EntityName) {
		toSerialize["entity_name"] = o.EntityName
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Roles) {
		toSerialize["roles"] = o.Roles
	}
	if !IsNil(o.ScopeExpression) {
		toSerialize["scope_expression"] = o.ScopeExpression
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	return toSerialize, nil
}

type NullableGithubComTakifouhalCrudsqlPkgInternalAuthModelsPermission struct {
	value *GithubComTakifouhalCrudsqlPkgInternalAuthModelsPermission
	isSet bool
}

func (v NullableGithubComTakifouhalCrudsqlPkgInternalAuthModelsPermission) Get() *GithubComTakifouhalCrudsqlPkgInternalAuthModelsPermission {
	return v.value
}

func (v *NullableGithubComTakifouhalCrudsqlPkgInternalAuthModelsPermission) Set(val *GithubComTakifouhalCrudsqlPkgInternalAuthModelsPermission) {
	v.value = val
	v.isSet = true
}

func (v NullableGithubComTakifouhalCrudsqlPkgInternalAuthModelsPermission) IsSet() bool {
	return v.isSet
}

func (v *NullableGithubComTakifouhalCrudsqlPkgInternalAuthModelsPermission) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGithubComTakifouhalCrudsqlPkgInternalAuthModelsPermission(val *GithubComTakifouhalCrudsqlPkgInternalAuthModelsPermission) *NullableGithubComTakifouhalCrudsqlPkgInternalAuthModelsPermission {
	return &NullableGithubComTakifouhalCrudsqlPkgInternalAuthModelsPermission{value: val, isSet: true}
}

func (v NullableGithubComTakifouhalCrudsqlPkgInternalAuthModelsPermission) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGithubComTakifouhalCrudsqlPkgInternalAuthModelsPermission) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


