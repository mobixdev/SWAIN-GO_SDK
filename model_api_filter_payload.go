/*
SWAIN API

A powerful dynamic CRUD API engine that automatically generates RESTful endpoints for your data models SWAIN provides automatic CRUD operations, filtering, pagination, and sorting capabilities for any data model. Features: - Automatic REST API generation - Dynamic model support - Complex filtering and querying - Pagination and sorting - Swagger/OpenAPI documentation - Multiple database support (SQL & NoSQL)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ApiFilterPayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiFilterPayload{}

// ApiFilterPayload struct for ApiFilterPayload
type ApiFilterPayload struct {
	Expressions []map[string]interface{} `json:"expressions,omitempty"`
}

// NewApiFilterPayload instantiates a new ApiFilterPayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiFilterPayload() *ApiFilterPayload {
	this := ApiFilterPayload{}
	return &this
}

// NewApiFilterPayloadWithDefaults instantiates a new ApiFilterPayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiFilterPayloadWithDefaults() *ApiFilterPayload {
	this := ApiFilterPayload{}
	return &this
}

// GetExpressions returns the Expressions field value if set, zero value otherwise.
func (o *ApiFilterPayload) GetExpressions() []map[string]interface{} {
	if o == nil || IsNil(o.Expressions) {
		var ret []map[string]interface{}
		return ret
	}
	return o.Expressions
}

// GetExpressionsOk returns a tuple with the Expressions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiFilterPayload) GetExpressionsOk() ([]map[string]interface{}, bool) {
	if o == nil || IsNil(o.Expressions) {
		return nil, false
	}
	return o.Expressions, true
}

// HasExpressions returns a boolean if a field has been set.
func (o *ApiFilterPayload) HasExpressions() bool {
	if o != nil && !IsNil(o.Expressions) {
		return true
	}

	return false
}

// SetExpressions gets a reference to the given []map[string]interface{} and assigns it to the Expressions field.
func (o *ApiFilterPayload) SetExpressions(v []map[string]interface{}) {
	o.Expressions = v
}

func (o ApiFilterPayload) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiFilterPayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Expressions) {
		toSerialize["expressions"] = o.Expressions
	}
	return toSerialize, nil
}

type NullableApiFilterPayload struct {
	value *ApiFilterPayload
	isSet bool
}

func (v NullableApiFilterPayload) Get() *ApiFilterPayload {
	return v.value
}

func (v *NullableApiFilterPayload) Set(val *ApiFilterPayload) {
	v.value = val
	v.isSet = true
}

func (v NullableApiFilterPayload) IsSet() bool {
	return v.isSet
}

func (v *NullableApiFilterPayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiFilterPayload(val *ApiFilterPayload) *NullableApiFilterPayload {
	return &NullableApiFilterPayload{value: val, isSet: true}
}

func (v NullableApiFilterPayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiFilterPayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


