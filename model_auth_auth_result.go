/*
SWAIN API

A powerful dynamic CRUD API engine that automatically generates RESTful endpoints for your data models SWAIN provides automatic CRUD operations, filtering, pagination, and sorting capabilities for any data model. Features: - Automatic REST API generation - Dynamic model support - Complex filtering and querying - Pagination and sorting - Swagger/OpenAPI documentation - Multiple database support (SQL & NoSQL)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AuthAuthResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuthAuthResult{}

// AuthAuthResult struct for AuthAuthResult
type AuthAuthResult struct {
	RefreshToken *string `json:"refresh_token,omitempty"`
	// Added: Include assigned role names
	Roles []string `json:"roles,omitempty"`
	Token *string `json:"token,omitempty"`
	// \"local\", \"github\", \"google\", etc.
	Type *string `json:"type,omitempty"`
	User *GithubComTakifouhalCrudsqlPkgInternalAuthModelsUser `json:"user,omitempty"`
}

// NewAuthAuthResult instantiates a new AuthAuthResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthAuthResult() *AuthAuthResult {
	this := AuthAuthResult{}
	return &this
}

// NewAuthAuthResultWithDefaults instantiates a new AuthAuthResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthAuthResultWithDefaults() *AuthAuthResult {
	this := AuthAuthResult{}
	return &this
}

// GetRefreshToken returns the RefreshToken field value if set, zero value otherwise.
func (o *AuthAuthResult) GetRefreshToken() string {
	if o == nil || IsNil(o.RefreshToken) {
		var ret string
		return ret
	}
	return *o.RefreshToken
}

// GetRefreshTokenOk returns a tuple with the RefreshToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthAuthResult) GetRefreshTokenOk() (*string, bool) {
	if o == nil || IsNil(o.RefreshToken) {
		return nil, false
	}
	return o.RefreshToken, true
}

// HasRefreshToken returns a boolean if a field has been set.
func (o *AuthAuthResult) HasRefreshToken() bool {
	if o != nil && !IsNil(o.RefreshToken) {
		return true
	}

	return false
}

// SetRefreshToken gets a reference to the given string and assigns it to the RefreshToken field.
func (o *AuthAuthResult) SetRefreshToken(v string) {
	o.RefreshToken = &v
}

// GetRoles returns the Roles field value if set, zero value otherwise.
func (o *AuthAuthResult) GetRoles() []string {
	if o == nil || IsNil(o.Roles) {
		var ret []string
		return ret
	}
	return o.Roles
}

// GetRolesOk returns a tuple with the Roles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthAuthResult) GetRolesOk() ([]string, bool) {
	if o == nil || IsNil(o.Roles) {
		return nil, false
	}
	return o.Roles, true
}

// HasRoles returns a boolean if a field has been set.
func (o *AuthAuthResult) HasRoles() bool {
	if o != nil && !IsNil(o.Roles) {
		return true
	}

	return false
}

// SetRoles gets a reference to the given []string and assigns it to the Roles field.
func (o *AuthAuthResult) SetRoles(v []string) {
	o.Roles = v
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *AuthAuthResult) GetToken() string {
	if o == nil || IsNil(o.Token) {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthAuthResult) GetTokenOk() (*string, bool) {
	if o == nil || IsNil(o.Token) {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *AuthAuthResult) HasToken() bool {
	if o != nil && !IsNil(o.Token) {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *AuthAuthResult) SetToken(v string) {
	o.Token = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *AuthAuthResult) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthAuthResult) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *AuthAuthResult) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *AuthAuthResult) SetType(v string) {
	o.Type = &v
}

// GetUser returns the User field value if set, zero value otherwise.
func (o *AuthAuthResult) GetUser() GithubComTakifouhalCrudsqlPkgInternalAuthModelsUser {
	if o == nil || IsNil(o.User) {
		var ret GithubComTakifouhalCrudsqlPkgInternalAuthModelsUser
		return ret
	}
	return *o.User
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthAuthResult) GetUserOk() (*GithubComTakifouhalCrudsqlPkgInternalAuthModelsUser, bool) {
	if o == nil || IsNil(o.User) {
		return nil, false
	}
	return o.User, true
}

// HasUser returns a boolean if a field has been set.
func (o *AuthAuthResult) HasUser() bool {
	if o != nil && !IsNil(o.User) {
		return true
	}

	return false
}

// SetUser gets a reference to the given GithubComTakifouhalCrudsqlPkgInternalAuthModelsUser and assigns it to the User field.
func (o *AuthAuthResult) SetUser(v GithubComTakifouhalCrudsqlPkgInternalAuthModelsUser) {
	o.User = &v
}

func (o AuthAuthResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuthAuthResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RefreshToken) {
		toSerialize["refresh_token"] = o.RefreshToken
	}
	if !IsNil(o.Roles) {
		toSerialize["roles"] = o.Roles
	}
	if !IsNil(o.Token) {
		toSerialize["token"] = o.Token
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.User) {
		toSerialize["user"] = o.User
	}
	return toSerialize, nil
}

type NullableAuthAuthResult struct {
	value *AuthAuthResult
	isSet bool
}

func (v NullableAuthAuthResult) Get() *AuthAuthResult {
	return v.value
}

func (v *NullableAuthAuthResult) Set(val *AuthAuthResult) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthAuthResult) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthAuthResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthAuthResult(val *AuthAuthResult) *NullableAuthAuthResult {
	return &NullableAuthAuthResult{value: val, isSet: true}
}

func (v NullableAuthAuthResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthAuthResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


